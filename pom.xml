<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>it.polimi.ingsw</groupId>
  <artifactId>AM29</artifactId>
  <version>1.0-SNAPSHOT</version>

  <name>AM29</name>
  <url>http://www.polimi.it</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- Java version -->
    <maven.compiler.source>12</maven.compiler.source>
    <maven.compiler.target>12</maven.compiler.target>

    <!-- Integrating Sonar with Jacoco -->
    <sonar.projectKey>it.polimi.ingsw:AM29</sonar.projectKey>
    <sonar.projectName>AM29</sonar.projectName>
    <sonar.projectVersion>1.0</sonar.projectVersion>
    <sonar.sources>src/main/java</sonar.sources>
    <sonar.tests>src/test/java</sonar.tests>
    <sonar.binaries>target</sonar.binaries>
    <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
    <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
    <sonar.jacoco.reportPath>${project.basedir}/../target/jacoco.exec</sonar.jacoco.reportPath>
    <sonar.language>java</sonar.language>

    <sonar.host.url>http://localhost:9000/</sonar.host.url>
    <sonar.login>admin</sonar.login>
    <sonar.password>admin</sonar.password>

  </properties>

  <dependencies>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.8.5</version>
      <scope>compile</scope>
    </dependency>

    <!--JAVA FX-->
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-controls</artifactId>
      <version>12</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-graphics</artifactId>
      <version>12</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-fxml</artifactId>
      <version>12</version>
      <scope>provided</scope>
    </dependency>
    <!--end of JAVA FX-->

  </dependencies>

  <build>
      <plugins>

        <!-- Export the project as a runnable JAR, with the provided mainClass -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
          <configuration>
            <archive>
              <manifest>
                <mainClass>it.polimi.ingsw.client.gui.Gui</mainClass>
              </manifest>
            </archive>
          </configuration>
        </plugin>

        <!-- Jacoco is a code coverage library that allows basic report creation -->
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.8.3</version>
          <configuration>
            <destFile>${sonar.jacoco.reportPath}</destFile>
            <append>true</append>
          </configuration>
          <executions>
            <execution>
              <id>agent</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- SonarQube analysis on Maven projects -->
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>3.4.0.905</version>
        </plugin>

        <!--JAVA FX-->
        <plugin>
          <groupId>org.openjfx</groupId>
          <artifactId>javafx-maven-plugin</artifactId>
          <version>0.0.2</version>
          <configuration>
            <mainClass>it.polimi.ingsw.client.gui.Gui</mainClass>
          </configuration>
        </plugin>
        <!--end of JAVA FX-->

      </plugins>
  </build>
</project>
